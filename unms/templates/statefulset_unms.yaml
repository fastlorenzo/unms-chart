---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "unms.name" . }}-unms"
  labels:
    {{- include "unms.labels" . | nindent 4 }}
    component: unms
    {{- range $key, $value := .Values.unms.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.unms.replicas }}
  serviceName: "{{ template "unms.name" . }}-unms"
  selector:
    matchLabels:
      {{- include "unms.selectorLabels" . | nindent 6 }}
      component: unms
  podManagementPolicy: {{ .Values.unms.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.unms.updateStrategy }}
  template:
    metadata:
      name: "{{ template "unms.name" . }}-unms"
      annotations:
        {{- range $key, $value := .Values.unms.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        {{- include "unms.selectorLabels" . | nindent 8 }}
        component: unms
        {{- range $key, $value := .Values.unms.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      containers:
      - image: {{ .Values.unms.image }}:{{ .Values.unms.imageTag }}
        name: "{{ template "unms.name" . }}-unms"
        imagePullPolicy: Always
        env:
        - name: HTTP_PORT
          value: '80'
        - name: BEHIND_REVERSE_PROXY
          value: "false"
        - name: PROD
          value: "true"
        - name: DEMO
          value: "false"
        - name: UNMS_REDISDB_HOST
          value: "{{ template "unms.name" . }}-redis"
        - name: UNMS_PG_HOST
          value: "{{ template "unms.name" . }}-db"
        - name: UNMS_RABBITMQ_HOST
          value: "{{ template "unms.name" . }}-rbmq"
        {{- if .Values.unms.persistence.enabled }}
        volumeMounts:
        - name: "unms-storage"
          mountPath: /home/app/unms/data
        {{- end }}
        resources:
{{ toYaml .Values.unms.resources | indent 10 }}
      {{- if .Values.unms.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: "unms-storage"
      labels:
        app.kubernetes.io/name: "unms-storage"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
      {{- range .Values.unms.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.unms.persistence.size | quote }}
      {{ if .Values.unms.persistence.existingClaim }}
      selector:
        matchLabels:
          name: {{ .Values.unms.persistence.existingClaim | quote }}
      {{- else }}
        {{- if .Values.unms.persistence.storageClass }}
      storageClassName: {{ .Values.unms.persistence.storageClass | quote }}
        {{- end }}
      {{- end }}
  {{- end }}
