---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "unms.fullname" . }}
  labels:
    {{- include "unms.labels" . | nindent 4 }}
    component: unms
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }}
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ include "unms.fullname" . }}
  selector:
    matchLabels:
      {{- include "unms.selectorLabels" . | nindent 6 }}
      component: unms
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      name: {{ include "unms.fullname" . }}
      annotations:
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      labels:
        {{- include "unms.selectorLabels" . | nindent 8 }}
        component: unms
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      containers:
      - image: {{ .Values.image }}:{{ .Values.imageTag }}
        name: "{{ template "unms.fullname" . }}"
        imagePullPolicy: Always
        env:
        - name: HTTP_PORT
          value: '80'
        - name: BEHIND_REVERSE_PROXY
          value: "false"
        - name: PROD
          value: "true"
        - name: DEMO
          value: "false"
        - name: UNMS_REDISDB_HOST
          value: "{{ .Release.Name }}-redis-master"
        - name: UNMS_PG_HOST
          value: "{{ .Release.Name }}-postgresql"
        - name: UNMS_PG_USER
          value: "unms"
        - name: UNMS_PG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-postgresql"
              key: postgresql-password
        - name: UNMS_RABBITMQ_HOST
          value: "{{ .Release.Name }}-rabbitmq"
        - name: UNMS_SIRIDB_HOST
          value: "{{ .Release.Name }}-siridb"
        - name: UCRM_HOST
          value: "{{ .Release.Name }}-ucrm"
        - name: UCRM_PORT
          value: "80"
        - name: UNMS_TOKEN
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-unms"
              key: unms-token
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: "storage"
          mountPath: /home/app/unms/data
        {{- end }}
        resources:
          {{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.persistence.enabled }}
      initContainers:
        - name: init
          image: busybox:1.32
          imagePullPolicy: IfNotPresent
          command:
            - 'sh'
            - '-c'
            - 'mkdir -p -m 777 /data/config-backups; mkdir -p -m 777 /data/unms-backups; mkdir -p -m 777 /data/import'
          volumeMounts:
          - name: "storage"
            mountPath: /data
      {{- end }}
      {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: "storage"
      labels:
        app.kubernetes.io/name: "storage"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
      {{ if .Values.persistence.existingClaim }}
      selector:
        matchLabels:
          name: {{ .Values.persistence.existingClaim | quote }}
      {{- else }}
        {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
      {{- end }}
  {{- end }}
