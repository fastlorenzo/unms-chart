# Default values for unms-nginx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: padhihomelab/unms
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "nginx-1.2.7"

#imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# labels -- unms-nginx pod extra labels
labels: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

ingress:
  # ingress.enabled -- Enable Ingress controller
  enabled: true
  # ingress.annotations -- Ingress annotations
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "step-issuer"
    cert-manager.io/acme-challenge-type: http01
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  # ingress.hosts -- Ingress hosts configuration
  hosts:
    - host: unms.bernardi.local
      paths:
        - /
  # ingress.tls -- Ingress TLS configuration
  tls:
    - hosts:
      - unms.bernardi.local
      secretName: unms-bernardi-local-tls

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  # persistence.enabled -- Persist UNMS data
  enabled: false
  cert:
    annotations: {}
    # persistence.cert.existingClaim -- Name of existing PVC for UNMS cert
    existingClaim: "unms-storage-cert-nfs"
    # persistence.cert.accessModes -- UNMS storage access modes
    accessModes:
      - ReadWriteOnce
    # persistence.cert.size -- UNMS storage size
    size: 10Gi
    # persistence.cert.storageClass -- UNMS PV storage class name, keep empty to use default.
    # Not used if `existingClaim` is set.
    storageClass: ""
  firmwares:
    annotations: {}
    # persistence.firmwares.existingClaim -- Name of existing PVC for UNMS firmwares
    existingClaim: "unms-storage-firmwares-nfs"
    # persistence.firmwares.accessModes -- UNMS storage access modes
    accessModes:
      - ReadWriteOnce
    # persistence.firmwares.size -- UNMS storage size
    size: 10Gi
    # persistence.firmwares.storageClass -- UNMS PV storage class name, keep empty to use default.
    # Not used if `existingClaim` is set.
    storageClass: ""

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
